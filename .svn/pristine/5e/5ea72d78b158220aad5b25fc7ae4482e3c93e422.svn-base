package com.hs.service.impl;

import java.util.ArrayList;
import java.util.List;

import org.junit.Test;

import com.alibaba.fastjson.JSON;
import com.hs.dao.OrderDaoYzw;
import com.hs.dao.impl.OrderDaoYzwImpl;
import com.hs.entity.Orderinfo;
import com.hs.entity.PageHelperDataResult;
import com.hs.service.OrderServiceYzw;

public class OrderServiceYzwImpl implements OrderServiceYzw {
	OrderDaoYzw dao= new OrderDaoYzwImpl();

	@Override
	public PageHelperDataResult getHistoryOrderinfoByStatus(int status,int pageNo,int pageSize,String starttime,String endtime) {
		List<Orderinfo> list= dao.getHistoryOrderinfoByStatus(status,pageNo,pageSize,starttime,endtime);
		List<Orderinfo> newlist =new ArrayList<>();
		int start = (pageNo - 1) * pageSize;
		int end = pageSize+start;
		if(end>list.size()) {
			end=list.size();
		}
		Orderinfo orderinfo=new Orderinfo();
		for(int i=start;i<end;i++) {
			orderinfo=list.get(i);
			newlist.add(orderinfo);
		}
		PageHelperDataResult result = new PageHelperDataResult();
		result.setRows(newlist);
		long count = list.size();

		result.setTotal(count);
		//当前页
		result.setCurrentPage(pageNo);
		//总计页数
		result.setTotalPage((count+pageSize-1)/pageSize);
		//每页数据条数
		result.setPageSize(pageSize);
		return result;
	}
	
	@Override
	public PageHelperDataResult getHistorys(int pageNo, int pageSize) {
		List<Orderinfo> list= dao.getHistorys(pageNo,pageSize);
		List<Orderinfo> newlist =new ArrayList<>();
		int start = (pageNo - 1) * pageSize;
		int end = pageSize+start;
		if(end>list.size()) {
			end=list.size();
		}
		Orderinfo orderinfo=new Orderinfo();
		for(int i=start;i<end;i++) {
			orderinfo=list.get(i);
			newlist.add(orderinfo);
		}
		PageHelperDataResult result = new PageHelperDataResult();
		result.setRows(newlist);
		long count = list.size();

		result.setTotal(count);
		//当前页
		result.setCurrentPage(pageNo);
		//总计页数
		result.setTotalPage((count+pageSize-1)/pageSize);
		//每页数据条数
		result.setPageSize(pageSize);
		return result;
	}

	@Override
	public PageHelperDataResult getOrderinfoByTime(int pageNo,int pageSize,String starttime, String endtime) {
		List<Orderinfo> list = dao.getOrderinfoByTime(pageNo,pageSize,starttime, endtime);
		List<Orderinfo> newlist =new ArrayList<>();
		int start = (pageNo - 1) * pageSize;
		int end = pageSize+start;
		if(end>list.size()) {
			end=list.size();
		}
		Orderinfo orderinfo=new Orderinfo();
		for(int i=start;i<end;i++) {
			orderinfo=list.get(i);
			newlist.add(orderinfo);
		}
		PageHelperDataResult result = new PageHelperDataResult();
		result.setRows(newlist);
		long count = list.size();

		result.setTotal(count);
		//当前页
		result.setCurrentPage(pageNo);
		//总计页数
		result.setTotalPage((count+pageSize-1)/pageSize);
		//每页数据条数
		result.setPageSize(pageSize);
		return result;
	}

	@Override
	public PageHelperDataResult getOrderinfoByTimeAndStatus(int pageNo,int pageSize,String starttime, String endtime, int status) {
		List<Orderinfo> list = dao.getOrderinfoByTimeAndStatus(pageNo,pageSize,starttime, endtime, status);
		List<Orderinfo> newlist =new ArrayList<>();
		int start = (pageNo - 1) * pageSize;
		int end = pageSize+start;
		if(end>list.size()) {
			end=list.size();
		}
		Orderinfo orderinfo=new Orderinfo();
		for(int i=start;i<end;i++) {
			orderinfo=list.get(i);
			newlist.add(orderinfo);
		}
		PageHelperDataResult result = new PageHelperDataResult();
		result.setRows(newlist);
		long count = list.size();

		result.setTotal(count);
		//当前页
		result.setCurrentPage(pageNo);
		//总计页数
		result.setTotalPage((count+pageSize-1)/pageSize);
		//每页数据条数
		result.setPageSize(pageSize);
		return result;
	}

	@Override
	public PageHelperDataResult getAllOrderinfo(int pageNo,int pageSize) {
		List<Orderinfo> list = dao.getAllOrderinfo();
		List<Orderinfo> newlist =new ArrayList<>();
		int start = (pageNo - 1) * pageSize;
		int end = pageSize+start;
		if(end>list.size()) {
			end=list.size();
		}
		Orderinfo orderinfo=new Orderinfo();
		for(int i=start;i<end;i++) {
			orderinfo=list.get(i);
			newlist.add(orderinfo);
		}
		PageHelperDataResult result = new PageHelperDataResult();
		result.setRows(newlist);
		long count = list.size();

		result.setTotal(count);
		//当前页
		result.setCurrentPage(pageNo);
		//总计页数
		result.setTotalPage((count+pageSize-1)/pageSize);
		//每页数据条数
		result.setPageSize(pageSize);
		return result;
	}

	@Override
	public PageHelperDataResult getOrderInfoByNameOrIdcard(int pageNo,int pageSize,String str) {
		List<Orderinfo> list = dao.getOrderInfoByNameOrIdcard(str);
		List<Orderinfo> newlist =new ArrayList<>();
		int start = (pageNo - 1) * pageSize;
		int end = pageSize+start;
		if(end>list.size()) {
			end=list.size();
		}
		Orderinfo orderinfo=new Orderinfo();
		for(int i=start;i<end;i++) {
			orderinfo=list.get(i);
			newlist.add(orderinfo);
		}
		PageHelperDataResult result = new PageHelperDataResult();
		result.setRows(newlist);
		long count = list.size();

		result.setTotal(count);
		//当前页
		result.setCurrentPage(pageNo);
		//总计页数
		result.setTotalPage((count+pageSize-1)/pageSize);
		//每页数据条数
		result.setPageSize(pageSize);
		return result;
	}
	@Override
	public PageHelperDataResult getOrderinfoByStatus(int pageNo, int pageSize) {
		List<Orderinfo> list = dao.getOrderinfoByStatus(pageNo, pageSize);
		List<Orderinfo> newlist =new ArrayList<>();
		int start = (pageNo - 1) * pageSize;
		int end = pageSize+start;
		if(end>list.size()) {
			end=list.size();
		}
		Orderinfo orderinfo=new Orderinfo();
		for(int i=start;i<end;i++) {
			orderinfo=list.get(i);
			newlist.add(orderinfo);
		}
		PageHelperDataResult result = new PageHelperDataResult();
		result.setRows(newlist);
		long count = list.size();

		result.setTotal(count);
		//当前页
		result.setCurrentPage(pageNo);
		//总计页数
		result.setTotalPage((count+pageSize-1)/pageSize);
		//每页数据条数
		result.setPageSize(pageSize);
		return result;
	}



}
