package com.hs.utils;

import java.io.IOException;
import java.io.InputStream;
import java.util.Properties;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class SQL {


    private static String table_room=null;
    private static String table_customer=null;
    private static String table_houqin=null;
  
    
    public static String [] roomAttruArra={"roomid","roomnumber","roomtypeid","roomtypename","roomintroduce","roomstatus"};
    public static String [] customerAttruArra={"id","name","sex","idcard","phone"};
    public static String [] houqinAttruArra={"empnumber","roomid","roomnumber","roomtypename","staercleantime","endcleantime"};
    
    //静态初始化块只会在类加载的时候加载一次,加载表名
    static {
        InputStream is=DBConnectionUtil.class.getClassLoader().getResourceAsStream("table.properties");
        Properties p=new Properties();
        try {
            p.load(is);
            table_room=p.getProperty("table_room");
            table_customer=p.getProperty("table_customer");
            table_houqin=p.getProperty("table_houqin");
        } catch (IOException e) {
            e.printStackTrace();
        }

    }

    
    public static String getRoomQueryByCount(int attrCode,String value){
        String sql="select count(*) count from "+table_room;
        switch (attrCode){//1-6表示查询根据6个属性查询
            case 0://表示查询数据表总记录数
            	
             	break;
            case 1:
                if(isNum(value)) {
                    sql += " where " + roomAttruArra[0] + "=" + Integer.parseInt(value);
                }else{
                    sql += " where " + roomAttruArra[0] + "='" +value+"'";
                }
                break;
            case 2:
                if(isNum(value)) {
                    sql += " where " + roomAttruArra[1] + "=" + Integer.parseInt(value);
                }else{
                    sql += " where " + roomAttruArra[1] + "='%" +value+"%'";
                }
                break;
            case 3:
                if(isNum(value)) {
                    sql += " where " + roomAttruArra[2] + "=" + Integer.parseInt(value);
                }else{
                    sql += " where " + roomAttruArra[2] + "='" +value+"'";
                }
                break;

            case 4:
                if(isNum(value)) {
                    sql += " where " + roomAttruArra[3] + " =" + Integer.parseInt(value);
                }else{
                    sql += " where " + roomAttruArra[3] + " like '%" +value+"%'";
                }
                break;


            case 5:
                if(isNum(value)) {
                    sql += " where " + roomAttruArra[4] + "=" + Integer.parseInt(value);
                }else{
                    sql += " where " + roomAttruArra[4] + " like '%" +value+"%'";
                }
                break;

            case 6:
                if(isNum(value)) {
                    sql += " where " + roomAttruArra[5] + "=" + Integer.parseInt(value);
                }else{
                    sql += " where " + roomAttruArra[5] + " ='" +value+"'";
                }
                break;
                

            case 7://条件组合查询
            	if(isNum(value)){
                    sql+=" where "+
              	 roomAttruArra[0]+" ="+ Integer.parseInt(value)+" or "+
                roomAttruArra[1]+" ="+ Integer.parseInt(value)+" or "+
                roomAttruArra[2]+" ="+ Integer.parseInt(value)+" or "+
                roomAttruArra[3]+" ="+ Integer.parseInt(value)+" or "+
                roomAttruArra[4]+" ="+ Integer.parseInt(value)+" or "+
                roomAttruArra[5]+" ="+ Integer.parseInt(value);
               
                }else {
                    sql+=" where "+
                roomAttruArra[0]+" like '%"+value+"%' or "+
                roomAttruArra[1]+" like '%"+value+"%' or "+
                roomAttruArra[2]+" like '%"+value+"%' or "+
                roomAttruArra[3]+" like '%"+value+"%' or "+
                roomAttruArra[4]+" like '%"+value+"%' or "+
                roomAttruArra[5]+" like '%"+value+"%'";
           
                }
                break;
                
                
        }
        return sql;
    }

    public static  String getRoomQuerySqlByPage( int pageNo, int pageSize,int attrCode,String value){
        String sql="select *from "+table_room;
        switch (attrCode){
            case 0://表示查询所有
            	sql+=" limit "+(pageNo-1)*pageSize+" , "+pageSize;
            	break;
            case 1:
                if(isNum(value)){
                    sql+=" where "+roomAttruArra[0]+" ="+ Integer.parseInt(value)+" limit "+(pageNo-1)*pageSize+" , "+pageSize;
                }else {
                    sql+=" where "+roomAttruArra[0]+" ='"+value+"' limit "+(pageNo-1)*pageSize+" , "+pageSize;
                }
                break;

            case 2:
                if(isNum(value)){
                    sql+=" where "+roomAttruArra[1]+" ="+ Integer.parseInt(value)+" limit "+(pageNo-1)*pageSize+" , "+pageSize;
                }else {
                    sql+=" where "+roomAttruArra[1]+" ='"+value+"' limit "+(pageNo-1)*pageSize+" , "+pageSize;
                }
                break;

            case 3:
                if(isNum(value)){
                    sql+=" where "+roomAttruArra[2]+" ="+ Integer.parseInt(value)+" limit "+(pageNo-1)*pageSize+" , "+pageSize;
                }else {
                    sql+=" where "+roomAttruArra[2]+" ='"+value+"' limit "+(pageNo-1)*pageSize+" , "+pageSize;
                }
            break;

            case 4:
                if(isNum(value)){
                    sql+=" where "+roomAttruArra[3]+" ="+ Integer.parseInt(value)+" limit "+(pageNo-1)*pageSize+" , "+pageSize;
                }else {
                    sql+=" where " + roomAttruArra[3] + " like '%" +value+"%' limit "+(pageNo-1)*pageSize+" , "+pageSize;
                }
                break;


            case 5:
                if(isNum(value)){
                    sql+=" where "+roomAttruArra[4]+" ="+ Integer.parseInt(value)+" limit "+(pageNo-1)*pageSize+" , "+pageSize;
                }else {
                	sql+=" where " + roomAttruArra[4] + " like '%" +value+"%' limit "+(pageNo-1)*pageSize+" , "+pageSize;
                }
                break;
                
            case 6:
                if(isNum(value)){
                    sql+=" where "+roomAttruArra[5]+" ="+ Integer.parseInt(value)+" limit "+(pageNo-1)*pageSize+" , "+pageSize;
                }else {
                    sql+=" where "+roomAttruArra[5]+" ='"+value+"' limit "+(pageNo-1)*pageSize+" , "+pageSize;
                }
                break;
                
            case 7://条件组合查询
            	 if(isNum(value)){
                     sql+=" where "+
               	 roomAttruArra[0]+" ="+ Integer.parseInt(value)+" or "+
                 roomAttruArra[1]+" ="+ Integer.parseInt(value)+" or "+
                 roomAttruArra[2]+" ="+ Integer.parseInt(value)+" or "+
                 roomAttruArra[3]+" ="+ Integer.parseInt(value)+" or "+
                 roomAttruArra[4]+" ="+ Integer.parseInt(value)+" or "+
                 roomAttruArra[5]+" ="+ Integer.parseInt(value)+
                 " limit "+(pageNo-1)*pageSize+" , "+pageSize;
                 }else {
                     sql+=" where "+
                 roomAttruArra[0]+" like '%"+value+"%' or "+
                 roomAttruArra[1]+" like '%"+value+"%' or "+
                 roomAttruArra[2]+" like '%"+value+"%' or "+
                 roomAttruArra[3]+" like '%"+value+"%' or "+
                 roomAttruArra[4]+" like '%"+value+"%' or "+
                 roomAttruArra[5]+" like '%"+value+"%'"+
                 " limit "+(pageNo-1)*pageSize+" , "+pageSize;
                 }
                break;

        }
    return sql;
    }
    
    
    /*public static String [] customerAttruArra={"id","name","sex","idcard","phone"};*/
    public static String getCustomerQueryByCount(int attrCode,String value){
        String sql="select count(*) count from "+table_customer;
        switch (attrCode){//1-6表示查询根据6个属性查询
            case 0://表示查询数据表总记录数
      
             	break;
            case 1:
                if(isNum(value)) {
                    sql += " where " + customerAttruArra[0] + "=" + Integer.parseInt(value);
                }else{
                    sql += " where " + customerAttruArra[0] + "='" +value+"'";
                }
                break;
            case 2:
                if(isNum(value)) {
                    sql += " where " + customerAttruArra[1] + "=" + Integer.parseInt(value);
                }else{
                    sql += " where " + customerAttruArra[1] + "='%" +value+"%'";
                }
                break;
            case 3:
                if(isNum(value)) {
                    sql += " where " + customerAttruArra[2] + "=" + Integer.parseInt(value);
                }else{
                    sql += " where " + customerAttruArra[2] + "='" +value+"'";
                }
                break;

            case 4:
                if(isNum(value)) {
                    sql += " where " + customerAttruArra[3] + " =" + Integer.parseInt(value);
                }else{
                    sql += " where " + customerAttruArra[3] + " like '%" +value+"%'";
                }
                break;


            case 5:
                if(isNum(value)) {
                    sql += " where " + customerAttruArra[4] + "=" + Integer.parseInt(value);
                }else{
                    sql += " where " + customerAttruArra[4] + " like '%" +value+"%'";
                }
                break;

            case 6://条件组合查询
            	if(isNum(value)){
                    sql+=" where "+
                    		customerAttruArra[0]+" ="+ Integer.parseInt(value)+" or "+
                    		customerAttruArra[1]+" ="+ Integer.parseInt(value)+" or "+
                    		customerAttruArra[2]+" ="+ Integer.parseInt(value)+" or "+
                    		customerAttruArra[3]+" ="+ Integer.parseInt(value)+" or "+
                    		customerAttruArra[4]+" ="+ Integer.parseInt(value);
                }else {
                    sql+=" where "+
                    		customerAttruArra[0]+" like '%"+value+"%' or "+
                    		customerAttruArra[1]+" like '%"+value+"%' or "+
                    		customerAttruArra[2]+" like '%"+value+"%' or "+
                    		customerAttruArra[3]+" like '%"+value+"%' or "+
                    		customerAttruArra[4]+" like '%"+value+"%'";
                }
                break;
             
        }
        return sql;
    }

    public static  String getCustomerQuerySqlByPage( int pageNo, int pageSize,int attrCode,String value){
        String sql="select *from "+table_customer;
        switch (attrCode){
            case 0://表示查询所有
            	sql+=" limit "+(pageNo-1)*pageSize+" , "+pageSize;
            	break;
            case 1:
                if(isNum(value)){
                	
                    sql+=" where "+customerAttruArra[0]+" ="+value+" limit "+(pageNo-1)*pageSize+" , "+pageSize;
                }else {
                    sql+=" where "+customerAttruArra[0]+" ='"+value+"' limit "+(pageNo-1)*pageSize+" , "+pageSize;
                }
                break;

            case 2:
                if(isNum(value)){
                    sql+=" where "+customerAttruArra[1]+" ="+value+" limit "+(pageNo-1)*pageSize+" , "+pageSize;
                }else {
                    sql+=" where "+customerAttruArra[1]+" ='"+value+"' limit "+(pageNo-1)*pageSize+" , "+pageSize;
                }
                break;

            case 3:
                if(isNum(value)){
                    sql+=" where "+customerAttruArra[2]+" ="+value+" limit "+(pageNo-1)*pageSize+" , "+pageSize;
                }else {
                    sql+=" where "+customerAttruArra[2]+" ='"+value+"' limit "+(pageNo-1)*pageSize+" , "+pageSize;
                }
            break;

            case 4:
                if(isNum(value)){
                    sql+=" where "+customerAttruArra[3]+" ="+value+" limit "+(pageNo-1)*pageSize+" , "+pageSize;
                }else {
                    sql+=" where " + customerAttruArra[3] + " like '%" +value+"%' limit "+(pageNo-1)*pageSize+" , "+pageSize;
                }
                break;


            case 5:
                if(isNum(value)){
                    sql+=" where "+customerAttruArra[4]+" ="+value+" limit "+(pageNo-1)*pageSize+" , "+pageSize;
                }else {
                	sql+=" where " + customerAttruArra[4] + " like '%" +value+"%' limit "+(pageNo-1)*pageSize+" , "+pageSize;
                }
                break;
                
            case 6:
            	  if(isNum(value)){
                      sql+=" where "+
                    		  customerAttruArra[0]+" ="+value+" or "+
                    		  customerAttruArra[1]+" ="+value+" or "+
                    		  customerAttruArra[2]+" ="+value+" or "+
                    		  customerAttruArra[3]+" ="+value+" or "+
                    		  customerAttruArra[4]+" ="+value+
                  " limit "+(pageNo-1)*pageSize+" , "+pageSize;
                  }else {
                      sql+=" where "+
                    		  customerAttruArra[0]+" like '%"+value+"%' or "+
                      		customerAttruArra[1]+" like '%"+value+"%' or "+
                      		customerAttruArra[2]+" like '%"+value+"%' or "+
                      		customerAttruArra[3]+" like '%"+value+"%' or "+
                      		customerAttruArra[4]+" like '%"+value+"%'"+
                  " limit "+(pageNo-1)*pageSize+" , "+pageSize;
                  }
                break;
                
        }
    return sql;
    }
    
    
   /* public static String [] houqinAttruArra={"empnumber","roomid","roomnumber","roomtypename","staercleantime","endcleantime"};
    */
    public static String getHouQinQueryByCount(int attrCode,String value){
        String sql="select count(*) count from "+table_houqin;
        switch (attrCode){//1-6表示查询根据6个属性查询
            case 0://表示查询数据表总记录数
            	
             	break;
            case 1:
                if(isNum(value)) {
                    sql += " where " + houqinAttruArra[0] + "=" + Integer.parseInt(value);
                }else{
                    sql += " where " + houqinAttruArra[0] + "='" +value+"'";
                }
                break;
            case 2:
                if(isNum(value)) {
                    sql += " where " + houqinAttruArra[1] + "=" + Integer.parseInt(value);
                }else{
                    sql += " where " + houqinAttruArra[1] + "='%" +value+"%'";
                }
                break;
            case 3:
                if(isNum(value)) {
                    sql += " where " + houqinAttruArra[2] + "=" + Integer.parseInt(value);
                }else{
                    sql += " where " + houqinAttruArra[2] + "='" +value+"'";
                }
                break;

            case 4:
                if(isNum(value)) {
                    sql += " where " + houqinAttruArra[3] + " =" + Integer.parseInt(value);
                }else{
                    sql += " where " + houqinAttruArra[3] + " like '%" +value+"%'";
                }
                break;


            case 5:
                if(isNum(value)) {
                    sql += " where " + houqinAttruArra[4] + "=" + Integer.parseInt(value);
                }else{
                    sql += " where " + houqinAttruArra[4] + " like '%" +value+"%'";
                }
                break;

            case 6:
                if(isNum(value)) {
                    sql += " where " + houqinAttruArra[5] + "=" + Integer.parseInt(value);
                }else{
                    sql += " where " + houqinAttruArra[5] + " ='" +value+"'";
                }
                break;
                

            case 7://条件组合查询
            	 if(isNum(value)){
                     sql+=" where "+
                    		 houqinAttruArra[0]+" ="+ Integer.parseInt(value)+" or "+
                    		 houqinAttruArra[1]+" ="+ Integer.parseInt(value)+" or "+
                    		 houqinAttruArra[2]+" ="+ Integer.parseInt(value)+" or "+
                    		 houqinAttruArra[3]+" ="+ Integer.parseInt(value)+" or "+
                    		 houqinAttruArra[4]+" ="+ Integer.parseInt(value)+" or "+
                    		 houqinAttruArra[5]+" ="+ Integer.parseInt(value);
                 }else {
                     sql+=" where "+
                    		 houqinAttruArra[0]+" like '%"+value+"%' or "+
                    		 houqinAttruArra[1]+" like '%"+value+"%' or "+
                    		 houqinAttruArra[2]+" like '%"+value+"%' or "+
                    		 houqinAttruArra[3]+" like '%"+value+"%' or "+
                    		 houqinAttruArra[4]+" like '%"+value+"%' or "+
                    		 houqinAttruArra[5]+" like '%"+value+"%'";
                 }
                break;
                
                
        }
        return sql;
    }

    public static  String getHouQinQuerySqlByPage( int pageNo, int pageSize,int attrCode,String value){
        String sql="select *from "+table_houqin;
        switch (attrCode){
            case 0://表示查询所有
            	sql+=" limit "+(pageNo-1)*pageSize+" , "+pageSize;
            	break;
            case 1:
                if(isNum(value)){
                    sql+=" where "+houqinAttruArra[0]+" ="+value+" limit "+(pageNo-1)*pageSize+" , "+pageSize;
                }else {
                    sql+=" where "+houqinAttruArra[0]+" ='"+value+"' limit "+(pageNo-1)*pageSize+" , "+pageSize;
                }
                break;

            case 2:
                if(isNum(value)){
                    sql+=" where "+houqinAttruArra[1]+" ="+value+" limit "+(pageNo-1)*pageSize+" , "+pageSize;
                }else {
                    sql+=" where "+houqinAttruArra[1]+" ='"+value+"' limit "+(pageNo-1)*pageSize+" , "+pageSize;
                }
                break;

            case 3:
                if(isNum(value)){
                    sql+=" where "+houqinAttruArra[2]+" ="+value+" limit "+(pageNo-1)*pageSize+" , "+pageSize;
                }else {
                    sql+=" where "+houqinAttruArra[2]+" ='"+value+"' limit "+(pageNo-1)*pageSize+" , "+pageSize;
                }
            break;

            case 4:
                if(isNum(value)){
                    sql+=" where "+houqinAttruArra[3]+" ="+value+" limit "+(pageNo-1)*pageSize+" , "+pageSize;
                }else {
                    sql+=" where " + houqinAttruArra[3] + " like '%" +value+"%' limit "+(pageNo-1)*pageSize+" , "+pageSize;
                }
                break;


            case 5:
                if(isNum(value)){
                    sql+=" where "+houqinAttruArra[4]+" ="+value+" limit "+(pageNo-1)*pageSize+" , "+pageSize;
                }else {
                	sql+=" where " + houqinAttruArra[4] + " like '%" +value+"%' limit "+(pageNo-1)*pageSize+" , "+pageSize;
                }
                break;
                
            case 6:
                if(isNum(value)){
                    sql+=" where "+houqinAttruArra[5]+" ="+value+" limit "+(pageNo-1)*pageSize+" , "+pageSize;
                }else {
                    sql+=" where "+houqinAttruArra[5]+" ='"+value+"' limit "+(pageNo-1)*pageSize+" , "+pageSize;
                }
                break;
                
            case 7://条件组合查询
            	 if(isNum(value)){
                     sql+=" where "+
                    		 houqinAttruArra[0]+" ="+ Integer.parseInt(value)+" or "+
                    		 houqinAttruArra[1]+" ="+ Integer.parseInt(value)+" or "+
                    		 houqinAttruArra[2]+" ="+ Integer.parseInt(value)+" or "+
                    		 houqinAttruArra[3]+" ="+ Integer.parseInt(value)+" or "+
                    		 houqinAttruArra[4]+" ="+ Integer.parseInt(value)+" or "+
                    		 houqinAttruArra[5]+" ="+ Integer.parseInt(value)+
                 " limit "+(pageNo-1)*pageSize+" , "+pageSize;
                 }else {
                     sql+=" where "+
                    		 houqinAttruArra[0]+" like '%"+value+"%' or "+
                    		 houqinAttruArra[1]+" like '%"+value+"%' or "+
                    		 houqinAttruArra[2]+" like '%"+value+"%' or "+
                    		 houqinAttruArra[3]+" like '%"+value+"%' or "+
                    		 houqinAttruArra[4]+" like '%"+value+"%' or "+
                    		 houqinAttruArra[5]+" like '%"+value+"%'"+
                 " limit "+(pageNo-1)*pageSize+" , "+pageSize;
                 }
                break;

        }
    return sql;
    }
    
    
    
    
    
    
  
    

    //正则表达式判断是否是数字
    public static boolean isNum(String str){
        String regularExpression = "^\\+{0,1}[1-9]\\d*";
        Pattern p = Pattern.compile(regularExpression);
        Matcher m = p.matcher(str);
        if (str.length() == 0) {
            return false;
        } else {
            if (m.matches()) {
                return true;
            } else {
                return false;
            }
        }
    }


}
